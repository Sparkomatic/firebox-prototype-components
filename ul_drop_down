import * as React from "react";
import { PropertyControls, ControlType, Frame, animate, FramerAnimation, PropertyStore, RenderTarget } from "framer";
import { string } from "prop-types";
import styled from "styled-components";
import { JSONArray } from "framer/types/src/render/types/JSONData";
// import { State } from "framer/types/src/events/recognizer/GestureRecognizer";

const StyledDropdown = styled("div")`
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: left;
  justify-content: left;
  border-radius: 2px;
  padding: 2rem;
  color: white;
  background-color: red;
  select {
    border: 3px solid #000;
  }
`;

interface Props {
  text: string;
  padding: string;
  color: string;
  backgroundColor: string;
  width: number;
  height: number;
}

interface State {
  listOpen: boolean,
  location: JSONArray
}

export class ul_drop_down extends React.Component<Props, State> {
  private selectRef: React.RefObject<HTMLSelectElement>;

  state = {
    listOpen: false,
    location: [
      {
          id: 0,
          title: 'New York',
          selected: false,
          key: 'location'
      },
      {
        id: 1,
        title: 'Dublin',
        selected: false,
        key: 'location'
      },
      {
        id: 2,
        title: 'California',
        selected: false,
        key: 'location'
      },
      {
        id: 3,
        title: 'Istanbul',
        selected: false,
        key: 'location'
      },
      {
        id: 4,
        title: 'Izmir',
        selected: false,
        key: 'location'
      },
      {
        id: 5,
        title: 'Oslo',
        selected: false,
        key: 'location'
      }
    ]
  }

  toggleList = () => {
    const listOpen = !this.state.listOpen
    this.setState({ ...this.state, listOpen })
    console.log("state listOpen is ", this.state.listOpen);
  }

  multiSelectItem = (id, key) => {
    let temp = {};
    temp[key]= this.state[key].map(obj => {
      if(obj.id == id) {
        obj.selected = !obj.selected;
      }
      return obj;
    });

    this.setState(temp);
    console.log("THIS STATE", this.state);
  }

  selectItem = (id, key) => {
    let temp = {};
    temp[key]= this.state[key].map(obj => {
    obj.selected = obj.id == id;
      return obj;
    });
    
    this.setState(temp);
    console.log("THIS SINGLE SELECT STATE", this.state);

  }

  // Set default properties
  static defaultProps = {
    text: "Hello World!",
    color: "blue",
    backgroundColor: "purple",
    padding: "1rem",
    width: 220,
    height: 48,
    // selectedOption: location[0]
  };

  // Items shown in property panel
  static propertyControls: PropertyControls = {
    text: { type: ControlType.String, title: "Text" }
  };

  render() {

    return (

      <StyledDropdown
        color={this.props.text}
        backgroundColor={this.props.backgroundColor}
        padding={this.props.padding}
        width={this.props.width}
        height={this.props.height}
        // onTap={this.onTap}
        // selectedOption={this.state.selectedOption}
      >
        <div className="dd-wrapper">
          <div className="dd-header" onClick={() => this.toggleList()}>  
            {/* <div className="dd-header-title">{this.state.location.filter(item => item.selected == false)}</div> */}
            <div className="dd-header-title" >Hello</div>
          </div>
          {this.state.listOpen && 
          
          <ul className="dd-list">
          {this.state.location.map(item => (
            <li className="dd-list-item" key={item.title} onClick={() => this.selectItem(item.id, item.key)}>
              {item.title}
            </li>
          ))}
        </ul>
        }

        </div>
      </StyledDropdown>
    );
  }
}
