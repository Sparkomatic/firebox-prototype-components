import * as React from 'react';
import { PropertyControls, ControlType, Frame } from 'framer';
import styled from 'styled-components';

const Segment = styled.div`
  /* background: "yellow"; */
  background: ${props => `${props.background}`};
  transition: flex 0.2s ease-out;
  justify-self: flex-start;
  /* max-height: ${props => `${props.height}px`}; */
  /* height: ${props => `${props.height}px`}; */
  width: 100%;
  height: 100%;
  overflow: hidden !important;
  transition: height ease-out 0.2s;
  /* &>div{
    transform: none !important;
    position: relative !important;
    width: 100% !important;
  }
  &.expanded {
    /* height: ${props=> `${props.fullHeight}px`}; */
    /* height: "100px"; */

  } */
`;
let depth = 50;

// Define type of property
interface Props {
    text: string;
    background: string;
    width: number;
    height: number;
    onClick: () => {},
    buttonState: "collapsed" | "expanded";
}

interface State {
  state: "collapsed" | "expanded";
}

export class simple_accordian_segment extends React.Component<Props> {

    constructor(props){
        super(props);
        this.state = {
          fullHeight: 100
        }
        this.toggleRow = this.toggleRow.bind(this);
      }

    toggleRow() {
        console.log("TOGGLED");
        depth = 300;
    }

    // Set default properties
    static defaultProps = {
    text: "Hello World!",
    background: "green",
    width: 220,
    height: 48,
    onClick: () => {},
    }

    // Items shown in property panel
    static propertyControls: PropertyControls = {
    text: { type: ControlType.String, title: "Text" },
    }

    changeState = (currentState) => {

      if(currentState === "collapsed") {
        return "expanded";
      }
      else {
        return "collapsed";
      }

    }

    render() {
    return <Segment
    height={depth}
    width={this.props.width}
    background = {this.props.background}
    onClick={this.changeState(this.props.buttonState)}
    >{this.props.text}</Segment>;
    }
}
